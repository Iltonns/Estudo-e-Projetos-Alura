<html><style>body {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
h1, h2, h3, h4, h5, h6 {
color: #000000;
background-color: #FFFFFF;
font-size: 24;
font-family: Serif;
font-weight: bold;
font-style: italic;
}
table, pre {
color: #000000;
background-color: #FFFFFF;
font-size: 16;
font-family: Serif;
font-weight: normal;
font-style: normal;
}

ul, #myUL {
  list-style-type: none;
}

#myUL {
  margin: 0;
  padding: 0;
}

.caret, .dropDownCaret {
  cursor: pointer;
}

.caret::before {
	content: "\25B6";
	color: black;
	display: inline - block;
	margin - right: 6px;
}

.dropDownCaret::before {
	content: "\25BC";
	color: black;
	display: inline - block;
	margin - right: 6px;
	float: right;
}


.nested {
  display: none;
}

.active {
  display: block;
}
</style><body><br></br><h1><div>Power BI Documentation</div></h1><br></br><hr></hr><h2><div>Generated by <a href="http://radacad.com/power-bi-helper">Power BI Helper</a> (Copyright &copy; <a href="http://radacad.com">RADACAD</a>).</div><br></br><div>Date: 26/03/2025 16:07:51</div><br></br></h2><h1><div>------------------******   Visualization    ******---------------------</div></h1><br></br><h2><div>File: Dashboard Gatito Petshop.pbix</div></h2><br></br><h3><div>Path: C:\Users\eleilton.esg\OneDrive - Uniasselvi\Alura\Business Intelligence\Gatito Projeto\Dashboard Gatito Petshop.pbix</div></h2><br></br><hr></hr><br></br><h3><div>List of Pages:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >DisplayName</td><td >Name</td><td >Ordinal</td><td >DisplayOption</td><td >Width</td><td >Height</td><td >PageIndex</td></tr><tr ><td >Dashboard</td><td >03a3d3a95ccac1baac70</td><td >0</td><td >1</td><td >1280</td><td >720</td><td >0</td></tr></table><hr></hr><br></br><h3><div>Visuals in Dashboard:</div></h3><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >Visual Type</td><td >Title</td><td >X</td><td >Y</td><td >Z</td><td >Width</td><td >Height</td><td >Name</td><td >tabOrder</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >card</td><td ></td><td >520</td><td >32</td><td >0</td><td >168</td><td >80</td><td >a1fc2bf3d9975c3ced04</td><td >2000</td><td >0</td><td >0</td></tr><tr ><td >card</td><td ></td><td >720</td><td >32</td><td >1000</td><td >176</td><td >80</td><td >dd227c56c70a5953370a</td><td ></td><td >1</td><td >0</td></tr><tr ><td >card</td><td ></td><td >312</td><td >32</td><td >2000</td><td >184</td><td >80</td><td >14f6724a540220c39de0</td><td >1000</td><td >2</td><td >0</td></tr><tr ><td >pieChart</td><td ></td><td >40</td><td >168</td><td >3000</td><td >320</td><td >248</td><td >ecdefd6aa72ec6c387fb</td><td >3000</td><td >3</td><td >0</td></tr><tr ><td >clusteredBarChart</td><td ></td><td >384</td><td >168</td><td >4000</td><td >464</td><td >248</td><td >d971ac2b211f56c5a9a7</td><td >4000</td><td >4</td><td >0</td></tr><tr ><td >areaChart</td><td >'Faturamento pela data'</td><td >32</td><td >448</td><td >5000</td><td >816</td><td >240</td><td >e688c76d279cefa1165e</td><td >5000</td><td >5</td><td >0</td></tr><tr ><td >ImageGrid_FC5183B9_926C_45E0_B5F7_0CE9EAF1DA9B</td><td ></td><td >872</td><td >224</td><td >6000</td><td >384</td><td >464</td><td >b9c2eb3f6d45a6c00c42</td><td >6000</td><td >6</td><td >0</td></tr><tr ><td >textFilter25A4896A83E0487089E2B90C9AE57C8A</td><td ></td><td >872</td><td >168</td><td >7000</td><td >376</td><td >56</td><td >a0b55bdb47c9866640ea</td><td >7000</td><td >7</td><td >0</td></tr><tr ><td >slicer</td><td ></td><td >1144</td><td >24</td><td >8000</td><td >136</td><td >96</td><td >e95979e01eb5d4891fe7</td><td >8000</td><td >8</td><td >0</td></tr><tr ><td >slicer</td><td >'Data da compra'</td><td >920</td><td >24</td><td >9000</td><td >224</td><td >112</td><td >e1105bf203965e5fbd02</td><td >9000</td><td >9</td><td >0</td></tr></table><hr></hr><br></br><h3><div>List of all Columns/Fields/Measures/Expressions Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >Name</td><td >Table Name</td><td >Aggregation</td><td >Expression</td><td >VisualIndex</td><td >PageIndex</td></tr><tr ><td >Pets</td><td >Clientes</td><td >Sum</td><td >Sum(Clientes.Pets)</td><td >0</td><td >0</td></tr><tr ><td >Quantidade</td><td >Vendas</td><td >Sum</td><td >Sum(Vendas.Quantidade)</td><td >1</td><td >0</td></tr><tr ><td >Faturamento total</td><td >Vendas</td><td ></td><td >Vendas.Faturamento total</td><td >2</td><td >0</td></tr><tr ><td >Gênero</td><td >Clientes</td><td ></td><td >Clientes.Gênero</td><td >3</td><td >0</td></tr><tr ><td >Faturamento total</td><td >Vendas</td><td ></td><td >Vendas.Faturamento total</td><td >3</td><td >0</td></tr><tr ><td >Gênero</td><td >Clientes</td><td ></td><td >Clientes.Gênero</td><td >3</td><td >0</td></tr><tr ><td >Bairro</td><td >Clientes</td><td ></td><td >Clientes.Bairro</td><td >4</td><td >0</td></tr><tr ><td >Faturamento total</td><td >Vendas</td><td ></td><td >Vendas.Faturamento total</td><td >4</td><td >0</td></tr><tr ><td >Bairro</td><td >Clientes</td><td ></td><td >Clientes.Bairro</td><td >4</td><td >0</td></tr><tr ><td >Ano</td><td ></td><td ></td><td >Vendas.Data de compra.Variation.Hierarquia de datas.Ano</td><td >5</td><td >0</td></tr><tr ><td >Trimestre</td><td ></td><td ></td><td >Vendas.Data de compra.Variation.Hierarquia de datas.Trimestre</td><td >5</td><td >0</td></tr><tr ><td >Mês</td><td ></td><td ></td><td >Vendas.Data de compra.Variation.Hierarquia de datas.Mês</td><td >5</td><td >0</td></tr><tr ><td >Dia</td><td ></td><td ></td><td >Vendas.Data de compra.Variation.Hierarquia de datas.Dia</td><td >5</td><td >0</td></tr><tr ><td >Faturamento total</td><td >Vendas</td><td ></td><td >Vendas.Faturamento total</td><td >5</td><td >0</td></tr><tr ><td >Mês</td><td ></td><td ></td><td >Vendas.Data de compra.Variation.Hierarquia de datas.Mês</td><td >5</td><td >0</td></tr><tr ><td >Url img</td><td >Produtos</td><td ></td><td >Produtos.Url img</td><td >6</td><td >0</td></tr><tr ><td >Nome produto</td><td >Produtos</td><td ></td><td >Produtos.Nome produto</td><td >7</td><td >0</td></tr><tr ><td >Marca</td><td >Produtos</td><td ></td><td >Produtos.Marca</td><td >8</td><td >0</td></tr><tr ><td >Marca</td><td >Produtos</td><td ></td><td >Produtos.Marca</td><td >8</td><td >0</td></tr><tr ><td >Data de compra</td><td >Vendas</td><td ></td><td >Vendas.Data de compra</td><td >9</td><td >0</td></tr><tr ><td >Data de compra</td><td >Vendas</td><td ></td><td >Vendas.Data de compra</td><td >9</td><td >0</td></tr></table><hr></hr><br></br><h3><div>List of Tables Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >Name</td></tr><tr ><td >Clientes</td></tr><tr ><td >Vendas</td></tr><tr ><td >Produtos</td></tr></table><hr></hr><br></br><h3><div>List of Columns Not Used in Visuals:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >Name</td><td >Table Name</td><td >State</td><td >Data Category</td><td >Data Type</td><td >Description</td><td >Display Folder</td><td >Error Message</td><td >Format String</td><td >Is Hidden</td><td >Modified Time</td><td >Structure Modified Time</td><td >Sort by Column</td><td >Summarize By</td><td >Type</td><td >Expression</td></tr><tr ><td >ID Consumidor</td><td >Clientes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Estado civil</td><td >Clientes</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Transacao</td><td >Vendas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >ID Consumidor</td><td >Vendas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >ID Produto</td><td >Vendas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor_unitário</td><td >Vendas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Faturamento</td><td >Vendas</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >ID Produto</td><td >Produtos</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Categoria</td><td >Produtos</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr><tr ><td >Valor</td><td >Produtos</td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td ></td><td >COLUMN</td><td ></td></tr></table><h1><div>------------------******   Model    ******---------------------</div></h1><br></br><h2><div>Model: Dashboard Gatito Petshop</div></h2><br></br><hr></hr><br></br><h3><div>List of Tables:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >Name</td><td >Description</td><td >Storage Mode</td><td >Source</td><td >Is Hidden</td></tr><tr ><td >Clientes</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Csv.Document(File.Contents("C:\Users\eleilton.esg\OneDrive - Uniasselvi\Alura\Business Intelligence\PowerBI-PrimeiroDashboard-Aula1-Material\base\Clientes.txt"),[Delimiter="	", Columns=5, Encoding=1252, QuoteStyle=QuoteStyle.None]),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(Fonte, [PromoteAllScalars=true]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"ID Consumidor", Int64.Type}, {"Gênero", type text}, {"Estado civil", type text}, {"Pets", Int64.Type}, {"Bairro", type text}}),
    #"Linhas Filtradas" = Table.SelectRows(#"Tipo Alterado", each [ID Consumidor] <> null and [ID Consumidor] <> "")
in
    #"Linhas Filtradas"</pre></td><td >False</td></tr><tr ><td >Vendas</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Folder.Files("C:\Users\eleilton.esg\OneDrive - Uniasselvi\Alura\Business Intelligence\PowerBI-PrimeiroDashboard-Aula1-Material\base\Vendas"),
    #"Arquivos Ocultos Filtrados1" = Table.SelectRows(Fonte, each [Attributes]?[Hidden]? <> true),
    #"Invocar Função Personalizada1" = Table.AddColumn(#"Arquivos Ocultos Filtrados1", "Transformar Arquivo", each #"Transformar Arquivo"([Content])),
    #"Colunas Renomeadas1" = Table.RenameColumns(#"Invocar Função Personalizada1", {"Name", "Nome da Origem"}),
    #"Outras Colunas Removidas1" = Table.SelectColumns(#"Colunas Renomeadas1", {"Nome da Origem", "Transformar Arquivo"}),
    #"Coluna de Tabela Expandida1" = Table.ExpandTableColumn(#"Outras Colunas Removidas1", "Transformar Arquivo", Table.ColumnNames(#"Transformar Arquivo"(#"Arquivo de Amostra"))),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Coluna de Tabela Expandida1",{{"Nome da Origem", type text}, {"Transacao", Int64.Type}, {"Data de compra", type date}, {"ID Consumidor", Int64.Type}, {"ID Produto", Int64.Type}, {"Quantidade", Int64.Type}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado",{"Nome da Origem"}),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Colunas Removidas",{{"Transacao", Int64.Type}, {"Data de compra", type date}, {"ID Consumidor", Int64.Type}, {"ID Produto", Int64.Type}, {"Quantidade", Int64.Type}})
in
    #"Tipo Alterado1"</pre></td><td >False</td></tr><tr ><td >DateTableTemplate_49e674b6-c7b7-4e89-be29-276b0edb69dd</td><td ></td><td >Import</td><td ><pre>Calendar(Date(2015,1,1), Date(2015,1,1))</pre></td><td >True</td></tr><tr ><td >LocalDateTable_1f4ac4db-4e62-430b-b3cc-aaf364cbd514</td><td ></td><td >Import</td><td ><pre>Calendar(Date(Year(MIN('Vendas'[Data de compra])), 1, 1), Date(Year(MAX('Vendas'[Data de compra])), 12, 31))</pre></td><td >True</td></tr><tr ><td >Produtos</td><td ></td><td >Import</td><td ><pre>let
    Fonte = Web.BrowserContents("https://docs.google.com/spreadsheets/d/e/2PACX-1vQuBG-JoWaeQF5rF3RgZYl5Z-PaJyDBK1I1c8a56RssNGoOlInqQROKi3z54u74E2ei32p_SWOpBb0v/pubhtml"),
    #"Tabela extraída de HTML" = Html.Table(Fonte, {{"Column1", "TABLE.waffle > * > TR > :nth-child(1)"}, {"Column2", "TABLE.waffle > * > TR > :nth-child(2)"}, {"Column3", "TABLE.waffle > * > TR > :nth-child(3)"}, {"Column4", "TABLE.waffle > * > TR > :nth-child(4)"}, {"Column5", "TABLE.waffle > * > TR > :nth-child(5)"}, {"Column6", "TABLE.waffle > * > TR > :nth-child(6)"}, {"Column7", "TABLE.waffle > * > TR > :nth-child(7)"}}, [RowSelector="TABLE.waffle > * > TR"]),
    #"Tipo Alterado" = Table.TransformColumnTypes(#"Tabela extraída de HTML",{{"Column1", Int64.Type}, {"Column2", type text}, {"Column3", type text}, {"Column4", type text}, {"Column5", type text}, {"Column6", type text}, {"Column7", type text}}),
    #"Linhas Superiores Removidas" = Table.Skip(#"Tipo Alterado",1),
    #"Cabeçalhos Promovidos" = Table.PromoteHeaders(#"Linhas Superiores Removidas", [PromoteAllScalars=true]),
    #"Tipo Alterado1" = Table.TransformColumnTypes(#"Cabeçalhos Promovidos",{{"1", Int64.Type}, {"ID Produto", Int64.Type}, {"Nome produto", type text}, {"Categoria", type text}, {"Marca", type text}, {"Valor", Currency.Type}, {"Url img", type text}}),
    #"Colunas Removidas" = Table.RemoveColumns(#"Tipo Alterado1",{"1"}),
    #"Tipo Alterado2" = Table.TransformColumnTypes(#"Colunas Removidas",{{"ID Produto", Int64.Type}, {"Valor", Currency.Type}})
in
    #"Tipo Alterado2"</pre></td><td >False</td></tr></table><hr></hr><br></br><h3><div>List of Measures:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Measure Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
		<th>Dependency</th>
		<th>Reverse Dependency</th>
	</tr>
	<tr>
		<td>Faturamento total</td>
		<td>Vendas</td>
		<td></td>
		<td><pre>SUM ( 'Vendas'[Faturamento] )</pre></td>
		<td><ul id="myUL">
<li><span class="caret">Measure: Faturamento total</span><span class="dropDownCaret">
<ul class="nested">
<li><span class="caret">Table: Vendas</span>
<ul class="nested">
<li>M_Expression: Transformar Arquivo (Table: )</li>
<li>M_Expression: Arquivo de Amostra (Table: )</li>
</ul></li>
<li><span class="caret">Calc_Column: Faturamento (Table: Vendas)</span>
<ul class="nested">
<li>Table: Vendas   ...</li>
<li>Column: Quantidade (Table: Vendas)</li>
<li><span class="caret">Calc_Column: Valor_unitário (Table: Vendas)</span>
<ul class="nested">
<li>Table: Vendas   ...</li>
<li>Column: Valor (Table: Produtos)</li>
<li><span class="caret">Active_Relationship: AutoDetected_1d879c2b-30c4-4970-bddc-144f0989044c (Table: Vendas)</span>
<ul class="nested">
<li>Column: ID Produto (Table: Vendas)</li>
<li>Column: ID Produto (Table: Produtos)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></span></li>
</ul></td>
		<td>Measure: Faturamento total</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Clientes:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>ID Consumidor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>G&#234;nero</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Estado civil</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Pets</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Bairro</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Vendas:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>Transacao</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Data de compra</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ID Consumidor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>ID Produto</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Quantidade</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor_unit&#225;rio</td>
		<td></td>
		<td>Calculated Column</td>
		<td>RELATED(Produtos[Valor])</td>
	</tr>
	<tr>
		<td>Faturamento</td>
		<td></td>
		<td>Calculated Column</td>
		<td>&#39;Vendas&#39;[Quantidade] * Vendas[Valor_unit&#225;rio]</td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Columns for Table Produtos:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Column Name</th>
		<th>Description</th>
		<th>Calculated Column</th>
		<th>Expression</th>
	</tr>
	<tr>
		<td>ID Produto</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Nome produto</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Categoria</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Marca</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Valor</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
	<tr>
		<td>Url img</td>
		<td></td>
		<td></td>
		<td></td>
	</tr>
</table>
<hr></hr><br></br><h3><div>List of Roles:</div></h3><br></br><table border="1" cellpadding="3">
	<tr>
		<th>Role Name</th>
		<th>Table Name</th>
		<th>Description</th>
		<th>Expression</th>
	</tr>
</table>
<hr></hr><br></br><h3><div>Relationships:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >Name</td><td >CrossFilteringBehavior</td><td >FromCardinality</td><td >FromColumn</td><td >FromTable</td><td >IsActive</td><td >IsRemoved</td><td >JoinOnDateBehavior</td><td >RelyOnReferentialIntegrity</td><td >SecurityFilteringBehavior</td><td >State</td><td >ToCardinality</td><td >ToColumn</td><td >ToTable</td><td >Type</td></tr><tr ><td >1edcbcd3-3df4-4a26-ad48-26292fd08c84</td><td >OneDirection</td><td >Many</td><td >Data de compra</td><td >Vendas</td><td >True</td><td >False</td><td >DatePartOnly</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >Date</td><td >LocalDateTable_1f4ac4db-4e62-430b-b3cc-aaf364cbd514</td><td >SingleColumn</td></tr><tr ><td >AutoDetected_1d879c2b-30c4-4970-bddc-144f0989044c</td><td >OneDirection</td><td >Many</td><td >ID Produto</td><td >Vendas</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >ID Produto</td><td >Produtos</td><td >SingleColumn</td></tr><tr ><td >cd2cd9ed-0f34-84f3-15e5-25d287b5b52f</td><td >OneDirection</td><td >Many</td><td >ID Consumidor</td><td >Vendas</td><td >True</td><td >False</td><td >DateAndTime</td><td >False</td><td >OneDirection</td><td >Ready</td><td >One</td><td >ID Consumidor</td><td >Clientes</td><td >SingleColumn</td></tr></table><hr></hr><br></br><h2><div>M (Power Query) Script:</div></h2><br></br><br></br><font face="verdana" size="2"<div>Clientes<br></br><br></br><font color="blue">let</font><br></br>    Fonte = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>("C:\Users\eleilton.esg\OneDrive - Uniasselvi\Alura\Business Intelligence\PowerBI-PrimeiroDashboard-Aula1-Material\base\Clientes.txt"),[Delimiter="	", Columns=5, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Fonte, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"ID Consumidor"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Gênero"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado civil"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Pets"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Bairro"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each [ID Consumidor] <> <font color="blue">null</font> and [ID Consumidor] <> <font color="red">""</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Linhas Filtradas"</font></font></div><br></br><hr></hr><br></br><h3><div>Partitions:</div></h3><br></br><table border='1px' cellpadding='1' cellspacing='1' bgcolor='lightyellow' style='font-family:Garamond; font-size:18'><tr ><td >Name</td><td >QueryDefinition</td></tr><tr ><td >Clientes</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Csv.Document</font>(<font color="purple">File.Contents</font>("C:\Users\eleilton.esg\OneDrive - Uniasselvi\Alura\Business Intelligence\PowerBI-PrimeiroDashboard-Aula1-Material\base\Clientes.txt"),[Delimiter="	", Columns=5, Encoding=1252, QuoteStyle=<font color="purple">QuoteStyle.None</font>]),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(Fonte, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"ID Consumidor"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Gênero"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Estado civil"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Pets"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Bairro"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Linhas Filtradas"</font> = <font color="purple">Table.SelectRows</font>(#<font color="red">"Tipo Alterado"</font>, each [ID Consumidor] <> <font color="blue">null</font> and [ID Consumidor] <> <font color="red">""</font>)<br></br><font color="blue">in</font><br></br>    #<font color="red">"Linhas Filtradas"</font></td></tr><tr ><td >Vendas</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Folder.Files</font>("C:\Users\eleilton.esg\OneDrive - Uniasselvi\Alura\Business Intelligence\PowerBI-PrimeiroDashboard-Aula1-Material\base\Vendas"),<br></br>    #<font color="red">"Arquivos Ocultos Filtrados1"</font> = <font color="purple">Table.SelectRows</font>(Fonte, each [Attributes]?[Hidden]? <> <font color="blue">true</font>),<br></br>    #<font color="red">"Invocar Função Personalizada1"</font> = <font color="purple">Table.AddColumn</font>(#<font color="red">"Arquivos Ocultos Filtrados1"</font>, <font color="red">"Transformar Arquivo"</font>, each #<font color="red">"Transformar Arquivo"</font>([Content])),<br></br>    #<font color="red">"Colunas Renomeadas1"</font> = <font color="purple">Table.RenameColumns</font>(#<font color="red">"Invocar Função Personalizada1"</font>, {<font color="red">"Name"</font>, <font color="red">"Nome da Origem"</font>}),<br></br>    #<font color="red">"Outras Colunas Removidas1"</font> = <font color="purple">Table.SelectColumns</font>(#<font color="red">"Colunas Renomeadas1"</font>, {<font color="red">"Nome da Origem"</font>, <font color="red">"Transformar Arquivo"</font>}),<br></br>    #<font color="red">"Coluna de Tabela Expandida1"</font> = <font color="purple">Table.ExpandTableColumn</font>(#<font color="red">"Outras Colunas Removidas1"</font>, <font color="red">"Transformar Arquivo"</font>, <font color="purple">Table.Column</font>Names(#<font color="red">"Transformar Arquivo"</font>(#<font color="red">"Arquivo de Amostra"</font>))),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Coluna de Tabela Expandida1"</font>,{{<font color="red">"Nome da Origem"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Transacao"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Data de compra"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"ID Consumidor"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"ID Produto"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Quantidade"</font>, <font color="purple">Int64.Type</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado"</font>,{<font color="red">"Nome da Origem"</font>}),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"Transacao"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Data de compra"</font>, <font color="blue">type</font> <font color="blue">date</font>}, {<font color="red">"ID Consumidor"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"ID Produto"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Quantidade"</font>, <font color="purple">Int64.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Tipo Alterado1"</font></td></tr><tr ><td >DateTableTemplate_49e674b6-c7b7-4e89-be29-276b0edb69dd</td><td >Calendar(Date(2015,1,1), Date(2015,1,1))</td></tr><tr ><td >LocalDateTable_1f4ac4db-4e62-430b-b3cc-aaf364cbd514</td><td >Calendar(Date(Year(MIN('Vendas'[Data de compra])), 1, 1), Date(Year(MAX('Vendas'[Data de compra])), 12, 31))</td></tr><tr ><td >Produtos</td><td ><font color="blue">let</font><br></br>    Fonte = <font color="purple">Web.BrowserContents</font>("https:<font color="green">//docs.google.com/spreadsheets/d/e/2PACX-1vQuBG-JoWaeQF5rF3RgZYl5Z-PaJyDBK1I1c8a56RssNGoOlInqQROKi3z54u74E2ei32p_SWOpBb0v/pubhtml"),</font><br></br>    #<font color="red">"Tabela extraída de HTML"</font> = <font color="purple">Html.Table</font>(Fonte, {{<font color="red">"Column1"</font>, "TABLE.waffle > * > TR > :nth-child(1)"}, {<font color="red">"Column2"</font>, "TABLE.waffle > * > TR > :nth-child(2)"}, {<font color="red">"Column3"</font>, "TABLE.waffle > * > TR > :nth-child(3)"}, {<font color="red">"Column4"</font>, "TABLE.waffle > * > TR > :nth-child(4)"}, {<font color="red">"Column5"</font>, "TABLE.waffle > * > TR > :nth-child(5)"}, {<font color="red">"Column6"</font>, "TABLE.waffle > * > TR > :nth-child(6)"}, {<font color="red">"Column7"</font>, "TABLE.waffle > * > TR > :nth-child(7)"}}, [RowSelector="TABLE.waffle > * > TR"]),<br></br>    #<font color="red">"Tipo Alterado"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Tabela extraída de HTML"</font>,{{<font color="red">"Column1"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Column2"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column3"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column4"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column5"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column6"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Column7"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Linhas Superiores Removidas"</font> = <font color="purple">Table.Skip</font>(#<font color="red">"Tipo Alterado"</font>,1),<br></br>    #<font color="red">"Cabeçalhos Promovidos"</font> = <font color="purple">Table.PromoteHeaders</font>(#<font color="red">"Linhas Superiores Removidas"</font>, [PromoteAllScalars=<font color="blue">true</font>]),<br></br>    #<font color="red">"Tipo Alterado1"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Cabeçalhos Promovidos"</font>,{{<font color="red">"1"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"ID Produto"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Nome produto"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Categoria"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Marca"</font>, <font color="blue">type</font> <font color="blue">text</font>}, {<font color="red">"Valor"</font>, <font color="purple">Currency.Type</font>}, {<font color="red">"Url img"</font>, <font color="blue">type</font> <font color="blue">text</font>}}),<br></br>    #<font color="red">"Colunas Removidas"</font> = <font color="purple">Table.RemoveColumns</font>(#<font color="red">"Tipo Alterado1"</font>,{<font color="red">"1"</font>}),<br></br>    #<font color="red">"Tipo Alterado2"</font> = <font color="purple">Table.TransformColumnTypes</font>(#<font color="red">"Colunas Removidas"</font>,{{<font color="red">"ID Produto"</font>, <font color="purple">Int64.Type</font>}, {<font color="red">"Valor"</font>, <font color="purple">Currency.Type</font>}})<br></br><font color="blue">in</font><br></br>    #<font color="red">"Tipo Alterado2"</font></td></tr></table><script>
	var toggler = document.getElementsByClassName("caret");
	for (var i = 0; i < toggler.length; i++){
		toggler[i].addEventListener("click", function() {
			this.parentElement.querySelector(".nested").classList.toggle("active");
		});
	}
		
	var togglerAll = document.getElementsByClassName("dropDownCaret");
	for (var j=0; j<togglerAll.length; j++){
		togglerAll[j].addEventListener("click", function(event){
			if (event.currentTarget != event.target) return;
			if(this.parentElement.querySelector(".nested").classList.contains("active")){
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(currentValue.classList.contains("active")){
						currentValue.classList.remove("active");
					}
				});
			}
			else{
				this.querySelectorAll(".nested").forEach(function(currentValue, currentIndex, listObj) {
					if(!currentValue.classList.contains("active")){
						currentValue.classList.add("active");
					}
				});
			}
		});
	}
</script></body></html>